#include "bsp_key_4.h" 
#include "delay.h"
void Key_GPIO_Config(void)
{
	GPIO_InitTypeDef GPIO_InitStructure;
	
	/*Enable key port clock*/
	RCC_APB2PeriphClockCmd(KEY1_GPIO_CLK | KEY2_GPIO_CLK , ENABLE);
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; 
	
	//Select the pin of the key and initialize the key with the structure	GPIO_InitStructure.GPIO_Pin = KEY1_GPIO_PIN; 	
	GPIO_Init(KEY1_GPIO_PORT, &GPIO_InitStructure);
	
	//Select the pin of the key and initialize the key with the structure	GPIO_InitStructure.GPIO_Pin = KEY2_GPIO_PIN; 
	GPIO_Init(KEY2_GPIO_PORT, &GPIO_InitStructure);	
}
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  //
/* 
** Key handler function that returns the key value
** mode:0,continuous pressing is not supported; mode1,continuous pressing is supported
**Function response priority,KEY1>KEY2>KEY2>KEYuser
*/

u8 KEY_Scan(u8 mode)
{	 
	static u8 key_up=1;//Button release sign
	if(mode)
	{
		key_up=1;//continuous pressing is supported	
	}	  
	if(key_up && (KEY1==1 || KEY2==1 ))
	{
		delay_ms(10);//To prevent the shaking
		key_up=0;
		if(KEY1==1)				return KEY1_PRES;
		else if(KEY2==1)		return KEY2_PRES;

	}
	else if(KEY1==0 && KEY2==0 )
	{
		key_up=1; 	
	}    
 	return 0;// no pressing
